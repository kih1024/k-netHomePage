-- MySQL Script generated by MySQL Workbench
-- 09/22/17 18:13:09
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema knet_Database
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema knet_Database
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `knet_Database` DEFAULT CHARACTER SET utf8 ;
USE `knet_Database` ;

-- -----------------------------------------------------
-- Table `knet_Database`.`AUTHORITYS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`AUTHORITYS` (
  `authority_type` VARCHAR(3) CHARACTER SET 'utf8' NOT NULL COMMENT '권한\n>관리자 : 3\n>정회원 : 2\n>부회원 : 1',
  `authority_num` INT NOT NULL COMMENT '권한\n>관리자 : 3\n>정회원 : 2\n>부회원 : 1',
  PRIMARY KEY (`authority_num`))
ENGINE = InnoDB
COMMENT = '사용자 권한 종류';


-- -----------------------------------------------------
-- Table `knet_Database`.`USERS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`USERS` (
  `id` VARCHAR(15) NOT NULL COMMENT '사용자 ID',
  `passwd` VARCHAR(255) NOT NULL COMMENT 'user\'s password\n\nSHA1()_암호화\nDM5()_복호화',
  `gisu` INT UNSIGNED NULL COMMENT 'user\'s 기수 (ex>23)',
  `username` VARCHAR(20) CHARACTER SET 'utf8' NOT NULL COMMENT 'user\'s nicknmae(별칭)',
  `realname` VARCHAR(10) CHARACTER SET 'utf8' NOT NULL COMMENT 'user\'s 실명',
  `email` VARCHAR(40) NULL COMMENT 'user\'s e-mail',
  `phone_number` VARCHAR(12) NULL COMMENT 'user\'s phone Number\nxxxx-xxxx-xxxx\n입력을 받을 경우 \'-\'을 제외하고 받을것.',
  `student_id` INT UNSIGNED NULL COMMENT 'OB선배의 경우 학번이 필요없음',
  `authority_num` INT NOT NULL COMMENT '권한\n>관리자 : 3\n>정회원 : 2\n>부회원 : 1',
  `birty_date` DATE NOT NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `student_id_UNIQUE` (`student_id` ASC),
  UNIQUE INDEX `phone_number_UNIQUE` (`phone_number` ASC),
  INDEX `fk_USERS_AUTHORITYS_idx` (`authority_num` ASC),
  CONSTRAINT `fk_USERS_AUTHORITYS`
    FOREIGN KEY (`authority_num`)
    REFERENCES `knet_Database`.`AUTHORITYS` (`authority_num`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = '사용자 정보 테이블';


-- -----------------------------------------------------
-- Table `knet_Database`.`POST_NOTICE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`POST_NOTICE` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'post\'s number (increase only)\n게시글의 내용을 가지고 있는 html문서 이름\n<html 저장시 post\'s id+\".html\" 이용하여 저장>',
  `title` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT 'post\'s title(제목)',
  `userid` VARCHAR(15) NOT NULL COMMENT 'user\'s id',
  `post_date` DATETIME NOT NULL COMMENT 'post upload date\n(YYYY-MM-DD hh:mm:ss)',
  `exist_data` TINYINT(1) NOT NULL COMMENT '데이터의 존재여부\n(다운로드 가능 데이터 존재여부)\n있을경우 board_dataes 에서 찾아 해당 data 가져오기',
  `views` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '조회수',
  `write_authority` INT NOT NULL,
  `read_authority` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_POSTS_USERS1`
    FOREIGN KEY (`userid`)
    REFERENCES `knet_Database`.`USERS` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '게시글';


-- -----------------------------------------------------
-- Table `knet_Database`.`NOTICE_COMMENTS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`NOTICE_COMMENTS` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '댓글 key id',
  `post_id` INT UNSIGNED NOT NULL COMMENT '연결된 post_id',
  `parent_id` INT NOT NULL COMMENT '\"0\" > 게시글의 댓글\n\"xxxx\" > 해당 댓글 id의 댓글',
  `username` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT 'comment\'s uploaded username',
  `comment_date` DATE NOT NULL COMMENT 'comment upload date',
  `content` VARCHAR(255) CHARACTER SET 'utf8' NOT NULL COMMENT 'comments 내용',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_COMMENTS_POSTS1`
    FOREIGN KEY (`post_id`)
    REFERENCES `knet_Database`.`POST_NOTICE` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '댓글';


-- -----------------------------------------------------
-- Table `knet_Database`.`NOTICE_DATAES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`NOTICE_DATAES` (
  `post_id` INT UNSIGNED NOT NULL COMMENT 'post number id (FK_posts - id)',
  `dataname` VARCHAR(255) NOT NULL COMMENT '확장자 포함 data name',
  `post_data` BLOB NOT NULL,
  PRIMARY KEY (`post_id`, `dataname`),
  CONSTRAINT `fk_POST_DATAES_POSTS1`
    FOREIGN KEY (`post_id`)
    REFERENCES `knet_Database`.`POST_NOTICE` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `knet_Database`.`SEMINAR_INFOR`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`SEMINAR_INFOR` (
  `id` INT NOT NULL,
  `year` INT NOT NULL COMMENT '년도',
  `semester` INT NOT NULL COMMENT '분기\n1-3~5    (1학기)\n2-6~8    (여름)\n3-9~11  (2학기)\n4-12~2  (겨울)',
  `seminar_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `knet_Database`.`POST_SEMINAR`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`POST_SEMINAR` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'post\'s number (increase only)\n게시글의 내용을 가지고 있는 html문서 이름\n<html 저장시 post\'s id+\".html\" 이용하여 저장>',
  `title` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT 'post\'s title(제목)',
  `userid` VARCHAR(15) NOT NULL COMMENT 'user\'s id',
  `post_date` DATETIME NOT NULL COMMENT 'post upload date\n(YYYY-MM-DD hh:mm:ss)',
  `exist_data` TINYINT(1) NOT NULL COMMENT '데이터의 존재여부\n(다운로드 가능 데이터 존재여부)\n있을경우 board_dataes 에서 찾아 해당 data 가져오기',
  `views` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '조회수',
  `seminar_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_POST_SEMINAR_SEMINAR_INFOR1_idx` (`seminar_id` ASC),
  CONSTRAINT `fk_POSTS_USERS10`
    FOREIGN KEY (`userid`)
    REFERENCES `knet_Database`.`USERS` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_POST_SEMINAR_SEMINAR_INFOR1`
    FOREIGN KEY (`seminar_id`)
    REFERENCES `knet_Database`.`SEMINAR_INFOR` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = '게시글';


-- -----------------------------------------------------
-- Table `knet_Database`.`POST_QUEST_ANSWER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`POST_QUEST_ANSWER` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'post\'s number (increase only)\n게시글의 내용을 가지고 있는 html문서 이름\n<html 저장시 post\'s id+\".html\" 이용하여 저장>',
  `title` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT 'post\'s title(제목)',
  `userid` VARCHAR(15) NOT NULL COMMENT 'user\'s id',
  `post_date` DATETIME NOT NULL COMMENT 'post upload date\n(YYYY-MM-DD hh:mm:ss)',
  `exist_data` TINYINT(1) NOT NULL COMMENT '데이터의 존재여부\n(다운로드 가능 데이터 존재여부)\n있을경우 board_dataes 에서 찾아 해당 data 가져오기',
  `views` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '조회수',
  `write_authority` INT NOT NULL,
  `read_authority` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_POSTS_USERS11`
    FOREIGN KEY (`userid`)
    REFERENCES `knet_Database`.`USERS` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '게시글';


-- -----------------------------------------------------
-- Table `knet_Database`.`POST_PROJECT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`POST_PROJECT` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'post\'s number (increase only)\n게시글의 내용을 가지고 있는 html문서 이름\n<html 저장시 post\'s id+\".html\" 이용하여 저장>',
  `title` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT 'post\'s title(제목)',
  `userid` VARCHAR(15) NOT NULL COMMENT 'user\'s id',
  `post_date` DATETIME NOT NULL COMMENT 'post upload date\n(YYYY-MM-DD hh:mm:ss)',
  `exist_data` TINYINT(1) NOT NULL COMMENT '데이터의 존재여부\n(다운로드 가능 데이터 존재여부)\n있을경우 board_dataes 에서 찾아 해당 data 가져오기',
  `views` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '조회수',
  `write_authority` INT NOT NULL,
  `read_authority` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_POSTS_USERS12`
    FOREIGN KEY (`userid`)
    REFERENCES `knet_Database`.`USERS` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '게시글';


-- -----------------------------------------------------
-- Table `knet_Database`.`POST_PEDIGREE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`POST_PEDIGREE` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'post\'s number (increase only)\n게시글의 내용을 가지고 있는 html문서 이름\n<html 저장시 post\'s id+\".html\" 이용하여 저장>',
  `title` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT 'post\'s title(제목)',
  `userid` VARCHAR(15) NOT NULL COMMENT 'user\'s id',
  `post_date` DATETIME NOT NULL COMMENT 'post upload date\n(YYYY-MM-DD hh:mm:ss)',
  `exist_data` TINYINT(1) NOT NULL COMMENT '데이터의 존재여부\n(다운로드 가능 데이터 존재여부)\n있을경우 board_dataes 에서 찾아 해당 data 가져오기',
  `views` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '조회수',
  `write_authority` INT NOT NULL,
  `read_authority` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_POSTS_USERS13`
    FOREIGN KEY (`userid`)
    REFERENCES `knet_Database`.`USERS` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '게시글';


-- -----------------------------------------------------
-- Table `knet_Database`.`POST_FREE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`POST_FREE` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'post\'s number (increase only)\n게시글의 내용을 가지고 있는 html문서 이름\n<html 저장시 post\'s id+\".html\" 이용하여 저장>',
  `title` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT 'post\'s title(제목)',
  `userid` VARCHAR(15) NOT NULL COMMENT 'user\'s id',
  `post_date` DATETIME NOT NULL COMMENT 'post upload date\n(YYYY-MM-DD hh:mm:ss)',
  `exist_data` TINYINT(1) NOT NULL COMMENT '데이터의 존재여부\n(다운로드 가능 데이터 존재여부)\n있을경우 board_dataes 에서 찾아 해당 data 가져오기',
  `views` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '조회수',
  `write_authority` INT NOT NULL,
  `read_authority` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_POSTS_USERS14`
    FOREIGN KEY (`userid`)
    REFERENCES `knet_Database`.`USERS` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '게시글';


-- -----------------------------------------------------
-- Table `knet_Database`.`POST_GALLERY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`POST_GALLERY` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'post\'s number (increase only)\n게시글의 내용을 가지고 있는 html문서 이름\n<html 저장시 post\'s id+\".html\" 이용하여 저장>',
  `title` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT 'post\'s title(제목)',
  `userid` VARCHAR(15) NOT NULL COMMENT 'user\'s id',
  `main_file_name` VARCHAR(255) NOT NULL COMMENT 'main file name',
  `post_date` DATETIME NOT NULL COMMENT 'post upload date\n(YYYY-MM-DD hh:mm:ss)',
  `views` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '조회수',
  `write_authority` INT NOT NULL,
  `read_authority` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_POSTS_USERS15`
    FOREIGN KEY (`userid`)
    REFERENCES `knet_Database`.`USERS` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '게시글';


-- -----------------------------------------------------
-- Table `knet_Database`.`POST_ANONYMOUS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`POST_ANONYMOUS` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'post\'s number (increase only)\n게시글의 내용을 가지고 있는 html문서 이름\n<html 저장시 post\'s id+\".html\" 이용하여 저장>',
  `title` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT 'post\'s title(제목)',
  `userid` VARCHAR(15) NOT NULL COMMENT 'user\'s id',
  `post_date` DATETIME NOT NULL COMMENT 'post upload date\n(YYYY-MM-DD hh:mm:ss)',
  `exist_data` TINYINT(1) NOT NULL COMMENT '데이터의 존재여부\n(다운로드 가능 데이터 존재여부)\n있을경우 board_dataes 에서 찾아 해당 data 가져오기',
  `views` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '조회수',
  `write_authority` INT NOT NULL,
  `read_authority` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_POSTS_USERS16`
    FOREIGN KEY (`userid`)
    REFERENCES `knet_Database`.`USERS` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '게시글';


-- -----------------------------------------------------
-- Table `knet_Database`.`PEDIGREE_DATAES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`PEDIGREE_DATAES` (
  `post_id` INT UNSIGNED NOT NULL COMMENT 'post number id (FK_posts - id)',
  `dataname` VARCHAR(255) NOT NULL COMMENT '확장자 포함 data name',
  `post_data` BLOB NOT NULL,
  PRIMARY KEY (`post_id`, `dataname`),
  CONSTRAINT `fk_POST_DATAES_POSTS10`
    FOREIGN KEY (`post_id`)
    REFERENCES `knet_Database`.`POST_PEDIGREE` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `knet_Database`.`FREE_DATAES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`FREE_DATAES` (
  `post_id` INT UNSIGNED NOT NULL COMMENT 'post number id (FK_posts - id)',
  `dataname` VARCHAR(255) NOT NULL COMMENT '확장자 포함 data name',
  `post_data` BLOB NOT NULL,
  PRIMARY KEY (`post_id`, `dataname`),
  CONSTRAINT `fk_POST_DATAES_POSTS100`
    FOREIGN KEY (`post_id`)
    REFERENCES `knet_Database`.`POST_FREE` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `knet_Database`.`ANONYMOUS_DATAES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`ANONYMOUS_DATAES` (
  `post_id` INT UNSIGNED NOT NULL COMMENT 'post number id (FK_posts - id)',
  `dataname` VARCHAR(255) NOT NULL COMMENT '확장자 포함 data name',
  `post_data` BLOB NOT NULL,
  PRIMARY KEY (`post_id`, `dataname`),
  CONSTRAINT `fk_POST_DATAES_POSTS1000`
    FOREIGN KEY (`post_id`)
    REFERENCES `knet_Database`.`POST_ANONYMOUS` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `knet_Database`.`GALLERY_PICTURES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`GALLERY_PICTURES` (
  `post_id` INT UNSIGNED NOT NULL COMMENT 'post number id (FK_posts - id)',
  `name` VARCHAR(255) NOT NULL COMMENT '확장자 포함 data name',
  `sub_comment` VARCHAR(255) NULL,
  PRIMARY KEY (`post_id`, `name`),
  CONSTRAINT `fk_POST_DATAES_POSTS10000`
    FOREIGN KEY (`post_id`)
    REFERENCES `knet_Database`.`POST_GALLERY` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `knet_Database`.`PROJECT_DATAES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`PROJECT_DATAES` (
  `post_id` INT UNSIGNED NOT NULL COMMENT 'post number id (FK_posts - id)',
  `dataname` VARCHAR(255) NOT NULL COMMENT '확장자 포함 data name',
  `post_data` BLOB NOT NULL,
  PRIMARY KEY (`post_id`, `dataname`),
  CONSTRAINT `fk_POST_DATAES_POSTS10001`
    FOREIGN KEY (`post_id`)
    REFERENCES `knet_Database`.`POST_PROJECT` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `knet_Database`.`SEMINAR_DATAES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`SEMINAR_DATAES` (
  `post_id` INT UNSIGNED NOT NULL COMMENT 'post number id (FK_posts - id)',
  `dataname` VARCHAR(255) NOT NULL COMMENT '확장자 포함 data name',
  `post_data` BLOB NOT NULL,
  PRIMARY KEY (`post_id`, `dataname`),
  CONSTRAINT `fk_POST_DATAES_POSTS10002`
    FOREIGN KEY (`post_id`)
    REFERENCES `knet_Database`.`POST_SEMINAR` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `knet_Database`.`QUEST_ANSWER_DATAES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`QUEST_ANSWER_DATAES` (
  `post_id` INT UNSIGNED NOT NULL COMMENT 'post number id (FK_posts - id)',
  `dataname` VARCHAR(255) NOT NULL COMMENT '확장자 포함 data name',
  `post_data` BLOB NOT NULL,
  PRIMARY KEY (`post_id`, `dataname`),
  CONSTRAINT `fk_POST_DATAES_POSTS10003`
    FOREIGN KEY (`post_id`)
    REFERENCES `knet_Database`.`POST_QUEST_ANSWER` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `knet_Database`.`PEDIGREE_COMMENTS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`PEDIGREE_COMMENTS` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '댓글 key id',
  `post_id` INT UNSIGNED NOT NULL COMMENT '연결된 post_id',
  `parent_id` INT NOT NULL COMMENT '\"0\" > 게시글의 댓글\n\"xxxx\" > 해당 댓글 id의 댓글',
  `username` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT 'comment\'s uploaded username',
  `comment_date` DATE NOT NULL COMMENT 'comment upload date',
  `content` VARCHAR(255) CHARACTER SET 'utf8' NOT NULL COMMENT 'comments 내용',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_COMMENTS_POSTS10_idx` (`post_id` ASC),
  CONSTRAINT `fk_COMMENTS_POSTS10`
    FOREIGN KEY (`post_id`)
    REFERENCES `knet_Database`.`POST_PEDIGREE` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '댓글';


-- -----------------------------------------------------
-- Table `knet_Database`.`FREE_COMMENTS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`FREE_COMMENTS` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '댓글 key id',
  `post_id` INT UNSIGNED NOT NULL COMMENT '연결된 post_id',
  `parent_id` INT NOT NULL COMMENT '\"0\" > 게시글의 댓글\n\"xxxx\" > 해당 댓글 id의 댓글',
  `username` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT 'comment\'s uploaded username',
  `comment_date` DATE NOT NULL COMMENT 'comment upload date',
  `content` VARCHAR(255) CHARACTER SET 'utf8' NOT NULL COMMENT 'comments 내용',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_COMMENTS_POSTS11_idx` (`post_id` ASC),
  CONSTRAINT `fk_COMMENTS_POSTS11`
    FOREIGN KEY (`post_id`)
    REFERENCES `knet_Database`.`POST_FREE` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '댓글';


-- -----------------------------------------------------
-- Table `knet_Database`.`ANONYMOUT_COMMENTS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`ANONYMOUT_COMMENTS` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '댓글 key id',
  `post_id` INT UNSIGNED NOT NULL COMMENT '연결된 post_id',
  `parent_id` INT NOT NULL COMMENT '\"0\" > 게시글의 댓글\n\"xxxx\" > 해당 댓글 id의 댓글',
  `username` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT 'comment\'s uploaded username',
  `comment_date` DATE NOT NULL COMMENT 'comment upload date',
  `content` VARCHAR(255) CHARACTER SET 'utf8' NOT NULL COMMENT 'comments 내용',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_COMMENTS_POSTS12_idx` (`post_id` ASC),
  CONSTRAINT `fk_COMMENTS_POSTS12`
    FOREIGN KEY (`post_id`)
    REFERENCES `knet_Database`.`POST_ANONYMOUS` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '댓글';


-- -----------------------------------------------------
-- Table `knet_Database`.`PROJECT_COMMENTS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`PROJECT_COMMENTS` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '댓글 key id',
  `post_id` INT UNSIGNED NOT NULL COMMENT '연결된 post_id',
  `parent_id` INT NOT NULL COMMENT '\"0\" > 게시글의 댓글\n\"xxxx\" > 해당 댓글 id의 댓글',
  `username` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT 'comment\'s uploaded username',
  `comment_date` DATE NOT NULL COMMENT 'comment upload date',
  `content` VARCHAR(255) CHARACTER SET 'utf8' NOT NULL COMMENT 'comments 내용',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_COMMENTS_POSTS14_idx` (`post_id` ASC),
  CONSTRAINT `fk_COMMENTS_POSTS14`
    FOREIGN KEY (`post_id`)
    REFERENCES `knet_Database`.`POST_PROJECT` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '댓글';


-- -----------------------------------------------------
-- Table `knet_Database`.`SEMINAR_COMMENTS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`SEMINAR_COMMENTS` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '댓글 key id',
  `post_id` INT UNSIGNED NOT NULL COMMENT '연결된 post_id',
  `parent_id` INT NOT NULL COMMENT '\"0\" > 게시글의 댓글\n\"xxxx\" > 해당 댓글 id의 댓글',
  `username` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT 'comment\'s uploaded username',
  `comment_date` DATE NOT NULL COMMENT 'comment upload date',
  `content` VARCHAR(255) CHARACTER SET 'utf8' NOT NULL COMMENT 'comments 내용',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_COMMENTS_POSTS15_idx` (`post_id` ASC),
  CONSTRAINT `fk_COMMENTS_POSTS15`
    FOREIGN KEY (`post_id`)
    REFERENCES `knet_Database`.`POST_SEMINAR` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '댓글';


-- -----------------------------------------------------
-- Table `knet_Database`.`QUEST_ANSWER_COMMENTS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`QUEST_ANSWER_COMMENTS` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '댓글 key id',
  `post_id` INT UNSIGNED NOT NULL COMMENT '연결된 post_id',
  `parent_id` INT NOT NULL COMMENT '\"0\" > 게시글의 댓글\n\"xxxx\" > 해당 댓글 id의 댓글',
  `username` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT 'comment\'s uploaded username',
  `comment_date` DATE NOT NULL COMMENT 'comment upload date',
  `content` VARCHAR(255) CHARACTER SET 'utf8' NOT NULL COMMENT 'comments 내용',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_COMMENTS_POSTS16_idx` (`post_id` ASC),
  CONSTRAINT `fk_COMMENTS_POSTS16`
    FOREIGN KEY (`post_id`)
    REFERENCES `knet_Database`.`POST_QUEST_ANSWER` (`id`)
    ON DELETE RESTRICT
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '댓글';


-- -----------------------------------------------------
-- Table `knet_Database`.`SEMINAR_USER_INFOR`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `knet_Database`.`SEMINAR_USER_INFOR` (
  `user_id` VARCHAR(15) NOT NULL,
  `seminar_id` INT NOT NULL,
  `write_authority` TINYINT(1) NOT NULL,
  PRIMARY KEY (`user_id`, `seminar_id`),
  INDEX `fk_SEMINAR_USER_INFOR_SEMINAR_TYPE1_idx` (`seminar_id` ASC),
  CONSTRAINT `fk_SEMINAR_USER_INFOR_USERS1`
    FOREIGN KEY (`user_id`)
    REFERENCES `knet_Database`.`USERS` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SEMINAR_USER_INFOR_SEMINAR_TYPE1`
    FOREIGN KEY (`seminar_id`)
    REFERENCES `knet_Database`.`SEMINAR_INFOR` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;